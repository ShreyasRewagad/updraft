% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/connection_directed.R
\docType{data}
\name{DirectedConnection}
\alias{DirectedConnection}
\title{Directed Connection Connection}
\format{An object of class \code{R6ClassGenerator} of length 25.}
\usage{
DirectedConnection
}
\description{
Implementation of \code{ConnectionInterface} which represents a directed flow of info
             between a head module to a tail module.
}
\section{Class Constructor}{

\describe{
    \item{\code{new(name, headModule, tailModule, inputArgument)}}{
        \itemize{
            \item{\bold{\code{name}}: unique character string that identifies
                   this connection.}
            \item{\bold{\code{headModule}}: obj that implements
                   \code{ModuleInterface} or a character string that
                    represents the head module of this connection.}
            \item{\bold{\code{tailModule}}: obj that implements
                   \code{ModuleInterface} or a character string that
                    represents thetail module of this connection.}
            \item{\bold{\code{inputArgument}}: Name of the inputArgument
                  the output of the head module is used for in the tail
                  module's execution.}
         }
    }
}
}

\section{Public}{

\describe{
    \item{\code{errorCheck(executionCheck = FALSE, ...)}}{
        \itemize{
            \item{Runs error checking on the internal state of this object for erroneous values.}
            \item{\code{executionCheck}: when set to \code{TRUE}, runs additional checks to determine if ready for execution.}
            \item{\code{...}: not used by this component.}
            \item{\bold{Returns}: \code{NULL}, will raise a fatal error if an error is found.}
        }
    }
    
    \item{\code{filterOutputValue(outputValue)}}{
        \itemize{
            \item{Filters the output of the \code{headModule}, \code{outputValue}, to what is expected by the \code{tailModule}. With this implementation of a connection, just returns \code{outputValue}.}
            \item{\bold{\code{outputValue}}: output of \code{headModule}.}
            \item{\bold{Returns}: \code{outputValue}}
        }
    }
    
    \item{\code{getHeadModuleName()}}{
        \itemize{
            \item{Gets the name of the head module associated with this connection.}
            \item{\bold{Returns}: a character string}
        }
    }
    
    \item{\code{getName()}}{
        \itemize{
            \item{Gets the character string that identifies this connection.}
            \item{\bold{Returns}: a character string}
        }
    }
    
    \item{\code{getInputArgument()}}{
        \itemize{
            \item{Gets the argument the output of the head module is used for in the tail module's execution.}
            \item{\bold{Returns}: a character vector}
        }
    }
    
    \item{\code{getSaveInfo()}}{
        \itemize{
            \item{Gets a named list of internal states of this object which can be used to save this object on disk.}
            \item{\bold{Returns}: a named list}
        }
    }
    
    \item{\code{getTailModuleName()}}{
        \itemize{
            \item{Gets the name of the tail module associated with this connection.}
            \item{\bold{Returns}: a character string}
        }
    }
    
}
}

\section{Private}{

\describe{
    \item{\code{inputArgument}}{
        \itemize{
            \item{Name of the argument the output of the head module is used for in the tail module's execution.}
        }
    }
    
    \item{\code{headModuleName}}{
        \itemize{
            \item{Stores name of the head module.}
        }
    }
    
    \item{\code{tailModuleName}}{
        \itemize{
            \item{Stores name of the tail module.}
        }
    }
    
    \item{\code{extractNameFromModule(module)}}{
        \itemize{
            \item{Extracts name of \code{module}.}
            \item{\bold{\code{module}}: obj that implements \code{ModuleInterface} or a character string name of a module.}
            \item{\bold{Returns}: Character string of \code{module}. Will raise a fatal error if module is
                  not a character vector or a valid implementation of \code{ModuleInterface}.}
        }
    }
}
}

\section{Static Class Methods}{

\describe{
    \item{\link[updraft]{DirectedConnection-cash-initFromSaveData}}{}
}
}

\keyword{datasets}
